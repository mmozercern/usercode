/*****************************************************************************
 * Project: RooFit                                                           *
 *                                                                           *
  * This code was autogenerated by RooClassFactory                            * 
 *****************************************************************************/

#ifndef ROOSPIN0ZZSTAR
#define ROOSPIN0ZZSTAR

#include "RooAbsPdf.h"
#include "RooRealProxy.h"
#include "RooCategoryProxy.h"
#include "RooAbsReal.h"
#include "RooAbsCategory.h"
 
class RooSpin0ZZstar : public RooAbsPdf {
public:
  RooSpin0ZZstar() {} ; 
  RooSpin0ZZstar(const char *name, const char *title,
	      RooAbsReal& _mZoff,
	      RooAbsReal& _h1,
	      RooAbsReal& _h2,
	      RooAbsReal& _Phi,
	      RooAbsReal& _a1Val,
	      RooAbsReal& _phi1Val,
	      RooAbsReal& _a2Val,
	      RooAbsReal& _phi2Val,
	      RooAbsReal& _a3Val,
	      RooAbsReal& _phi3Val,
	      RooAbsReal& _MZVal,
	      RooAbsReal& _MXVal,
	      RooAbsReal& _R1Val,
	      RooAbsReal& _R2Val);
  RooSpin0ZZstar(const RooSpin0ZZstar& other, const char* name=0) ;
  virtual TObject* clone(const char* newname) const { return new RooSpin0ZZstar(*this,newname); }
  inline virtual ~RooSpin0ZZstar() { }

	Int_t getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, const char* rangeName=0) const ;
	Double_t analyticalIntegral(Int_t code, const char* rangeName=0) const ;

protected:

  RooRealProxy mZoff ;
  RooRealProxy h1 ;
  RooRealProxy h2 ;
  RooRealProxy Phi ;
  RooRealProxy a1Val ;
  RooRealProxy phi1Val ;
  RooRealProxy a2Val ;
  RooRealProxy phi2Val ;
  RooRealProxy a3Val ;
  RooRealProxy phi3Val ;
  RooRealProxy MZVal ;
  RooRealProxy MXVal ;
  RooRealProxy R1Val ;
  RooRealProxy R2Val ;
  
  Double_t evaluate() const ;

private:

  ClassDef(RooSpin0ZZstar,1) // Your description goes here...
};
 
#endif
